#pragma kernel Main
#pragma kernel Main2

RWTexture2D<float4> Output;

void Plot(int x, int y)
{
	Output[uint2(x, y)] = float4(0, 0, 1, 1);
}

void DrawLine(float2 start, float2 end)
{
	float dydx = (end.y - start.y) / (end.x - start.x);
	float y = start.y;
	for (int x = start.x; x <= end.x; x++)
	{
		Plot(x, round(y));
		y = y + dydx;
	}
}

void DrawCircle(float cx, float cy)
{
	int x, y, px, nx, py, ny, d;
 
	float r = 250;
 
	for (x = 0; x <= r; x++)
	{
		d = (int) ceil(sqrt(r * r - x * x));
		for (y = 0; y <= d; y++)
		{
			px = cx + x;
			nx = cx - x;
			py = cy + y;
			ny = cy - y;
 
			Plot(px, py);
			Plot(nx, py);
			Plot(px, ny);
			Plot(nx, ny);
		}
	}
}

[numthreads(32, 32, 1)]
void Main(uint3 threadID : SV_DispatchThreadID)
{
	Output[threadID.xy] = float4(threadID.xy / 1024.0f, 0, 1);
	
	if (threadID.x == 1023 && threadID.y == 1023)
	{
		DrawLine(float2(0, 0), float2(1024, 1024));
		DrawLine(float2(0, 1023), float2(1023, 0));

		DrawCircle(512, 512);
		DrawCircle(0, 512);
		DrawCircle(1023, 512);
	}
}

[numthreads(32, 32, 1)]
void Main2(uint3 threadID : SV_DispatchThreadID)
{
	Output[threadID.xy] = float4(1, 0, 0, 1);
	
	if (threadID.x == 1023 && threadID.y == 1023)
	{
		DrawLine(float2(0, 0), float2(1024, 1024));
		DrawLine(float2(0, 1023), float2(1023, 0));

		DrawCircle(512, 512);
		DrawCircle(0, 512);
		DrawCircle(1023, 512);
	}
}